function myCoder() {
  
  var app = SpreadsheetApp;
  var ss = app.getActiveSpreadsheet();
  var activeSheet = ss.getActiveSheet();
  // ["childhood", "expos", "Expos", "early on", "introduc", "early in life", "EarlyLife"],
  var dict = {
    1 : ["young", "Young", "Old", " old ", " age ", "Age"],
    2 : ["animal", "Animal", "Animal"],
    3 : ["area", "Area", "region", "travel", "Region", "country", "place", "Country", "africa", "Africa", "quarantine", "Quarantine", "AreaAway"],
    4 : ["research", "Research", "counsel", "Counsel", "educat", "Educat", "aware", "precaution", "Aware", "indentify", "Identify", "learn", "Learn", "teach", "Teach", "inform", "Inform", "knowled", "Knowled", "Aware"],
    5 : ["blood flow", "blood pressure", "arteries", "BFlow"],
    6 : ["cholest", "Cholest", "Cholesterol"],
    7 : ["clean", "Clean", "bath", "Bath", "shower", "Shower", "hygie", "Hygie", "sanit", "Sanit", "sanitation", "Sanitation", "cover", "Cover", "Clean"],
    8 : ["fruit", "Fruit", "nutri", "meat", "Meat", "veggie", "Veggie", "vegetable", "Vegetable", "diet", "Diet", " eat ", "Eat", "food", "Food", "intake", "Intake", "ingest", "Ingest", "Diet"],
    9 : ["disinfect", "Disinfect", "sterile", "Sterile", "surface", "Surface", "Disinfect"],
    10 : ["early expos", "early in life", "EarlyLife"],
    11 : ["exerci", "Exerci", "excersize", "lose weight", "in shape", "losing weight", "working out", "active", "cardio", "work out", "physical activity", "gym", "fit", "Exercise"],
    12 : ["family history", "runs in the family", "ancestors", "ancestory", "one's family", "family's health history", "family risk", "Family"],
    13 : ["genetic", "genes", "Genetic", "Genes", " gene ", "DNA", "inherit", "Gene"],
    14 : ["hand", "Hand", "Hand"],
    15 : ["healthcare", "health care", "check-up", "treatment", "therapy", "testing", "medical facilit", "hospital", "Hospital", "physician", "doctor", "Physician", "Doctor", "check up", "Healthcare", "Healthcare"],
    16 : ["healthy life", "Healthy"],
    17 : ["hydrat", "drink water", "Hydrat", "Hydration"],
    18 : ["immune", "Immune", "imune", "Imune", "Immune"],
    19 : ["impossible", "Impossible", "not possible", "cannot be prevented", "Cannot be prevented", "Can't be prevented", "cannot prevent", "can't prevent", "Cannot prevent", "Can't prevent", "can't be prevented", "isn't a way", "no cure", "no way", "don't think", "dont think", "do not think", "don't believe", "dont believe", "do not believe", "Impossible"],
    20 : ["meds", "Meds", "medica", "Medica", "drugs", "Drugs", "medicine", "Medicine", "vitamin", "Vitamin", "antibio", "Antibio", "Meds"],
    21 : ["mental health", "mental", "Mental"], 
    22 : ["avoid", "quarant", "Quarant", "Quarantine", "indoor", "Indoor", "home", "house", "Home", "House", "Stay Home", "Avoid", "distanc", "near sick", "around sick", "near infected", "around infected", "bodily fluid", "body fluid", "keep distance", "from people", "from sick people", "from infected people", "exposure", "stay away", "Stay away", "staying away", "Staying away", "contact", "isolat", "Contact", "individuals", "Individuals", "social", "Social", "NoContact"],
    23 : ["be careful", "preventative", "prevention", "warning sign", "taking care", "being careful", "Prevent"],
    24 : [" ppe ", "PPE", "Ppe", "protective equi", "Protective", "protective c", "glove", "repel", "mask", "PPE", "spray", "Protect"],
    25 : ["screening", "pregna", "eugenic", "Eugenic", "Screening"],
    26 : ["sleep", "Sleep", " rest ", "resting", "Rest", "Sleep"],
    27 : ["smok", "Smok", "Cigar", "cigar", "vaping", "Smoking"],
    28 : ["alcohol", "harmful drugs", "bad drugs", "Substances"],
    29 : ["stress", "Stress", "relax", "Relax", "stay positive", "staying positive", "tension", "Tension", "anxiety", "Anxiety", "nervous", "nervous", "Stress"],
    30 : ["vaccine", "Vaccine", "Vacc", "vacc", "immuniza", "Immuniza", "shot", "Vaccine"],
    31 : ["weight", "Weight", "Weight"],
    32 : ["don't know", "Don't know", "dont know", "Dont know", "Do not know", "do not know", "no idea", "no clue", "IDK"],
    33 : ["unsure", "Unsure", "not sure", "Not sure", "not certain", "Not certain", "not familiar", "Not familiar", "1"],
    34 : ["cloth", "Cloth", "Clothing", "Other"],
    35 : ["charity", "donate", "Charity", "Donate", "Provide", "provide", "welfare", "Welfare", "Other"],
    36 : [" pray ", "Pray", "bible", "Religion", "Other"],
    37 : [" warm ", " hot ", "Warm", "Hot", "temperature", "Temperature", "Other"],
    38 : ["adsaasdsaOther"],
    39 : ["mosquito", "Mosquito", "insect", "Insect", "Insects", "Other"],
    40 : ["face", "nose", "Cover/Avoid Touching Face", "Other"],
    41 : ["tissue", "elbow", "armpit", "Cover Mouth", "Other"],
    42 : ["sex", "SafeSex", "Other"],
    43 : ["sharing", "share", "Sharing", "Share", "NoSharing", "Other"]
  };
  
  var map = {};
  var max = 0;
 
  var range1 = activeSheet.getRange(2, 4, 200);
  var range2 = activeSheet.getRange(2, 6, 200);
  range1.clear();
  range2.clear();
  
  for (var i = 1; i < 201; i++){
    var someCell = activeSheet.getRange(i+1, 3).getValue();
    var codeCell = activeSheet.getRange(i+1, 4).getValue();
    var otherCell = activeSheet.getRange(i+1, 6).getValue();
    
    for (var j = 1; j <= Object.keys(dict).length; j++){
      for (var k = 0; k < dict[j].length - 1; k++){
        someCell = activeSheet.getRange(i+1, 3).getValue();
        codeCell = activeSheet.getRange(i+1, 4).getValue();
        otherCell = activeSheet.getRange(i+1, 6).getValue();
        
        if (someCell.indexOf(dict[j][k])>-1){
          if (dict[j][dict[j].length - 1] == "1"){
            activeSheet.getRange(i + 1, 5).setValue(dict[j][dict[j].length - 1]);
          } else {

            if (dict[j][dict[j].length - 1] == "Other"){
              max = someCell.indexOf(dict[j][k]) + 4000;
              if (otherCell.length == 0){ 
                // activeSheet.getRange(i + 1, 6).setValue(dict[j][dict[j].length - 2]);
                map[someCell.indexOf(dict[j][k]) + 4000] = dict[j][dict[j].length - 2];
              } else {
                // activeSheet.getRange(i + 1, 6).setValue(otherCell + ", " + dict[j][dict[j].length - 2]);
                map[someCell.indexOf(dict[j][k]) + 4000] = dict[j][dict[j].length - 2];
              }
            } else {
              if (codeCell.length == 0) {
                // activeSheet.getRange(i + 1, 4).setValue(dict[j][dict[j].length - 1]);
                map[someCell.indexOf(dict[j][k])] = dict[j][dict[j].length - 1];
              } else if (otherCell.length == 0) {
                // activeSheet.getRange(i + 1, 4).setValue(codeCell + ", " + dict[j][dict[j].length - 1]);
                  map[someCell.indexOf(dict[j][k])] = dict[j][dict[j].length - 1];
              }
            }
            
          }
          k = dict[j].length - 1;
        }
        
      }
    }
    
    for (var f in map) {
      codeCell = activeSheet.getRange(i+1, 4).getValue();
      otherCell = activeSheet.getRange(i+1, 6).getValue();
      if (f >= 4000){
        if (otherCell.length == 0){ 
          activeSheet.getRange(i + 1, 6).setValue(map[f]);
        } else {
          activeSheet.getRange(i + 1, 6).setValue(otherCell + "," + map[f]);
        }
      } else {
        if (codeCell.length == 0) {
          activeSheet.getRange(i + 1, 4).setValue(map[f]);
        } else if (otherCell.length == 0) {
          activeSheet.getRange(i + 1, 4).setValue(codeCell + "," + map[f]);
        }
      }
      delete map[f];
    }
  }
  for (var i = 1; i < 201; i++){
    var otherCell = activeSheet.getRange(i+1, 6).getValue();
    var codeCell = activeSheet.getRange(i+1, 4).getValue();
    if (otherCell.length != 0) {
      if (codeCell.length == 0) {
        activeSheet.getRange(i + 1, 4).setValue("Other");
      } else {
        activeSheet.getRange(i + 1, 4).setValue(codeCell + "," + "Other");
      }
    }
  }
}