function myCoder() {
  
  var app = SpreadsheetApp;
  var ss = app.getActiveSpreadsheet();
  var activeSheet = ss.getActiveSheet();

  var dict = {
    1 : ["young", "Young", "Old", " old ", "Age", "elder", " age", "Age"],
    2 : ["animal", "Animal", "Animal"],
    3 : ["region", "environment", "Environment", "Region", "location", "living in", "live in", "outdoor", "indoor", "outside", "area", "country", "place", "Country", "africa", "Africa", "AreaGen"],
    4 : ["born with", "congeni", "Congeni", "Congenital"],
    5 : ["contact with", "Contact with", "Exposure to som", "Exposure to inf", "Exposure to o", "Exposure to p", "exposure to som", "exposure to inf", "exposure to o", "exposure to p", "interact", "Interact", "contact through", "Contact through", "contact to", "kiss", "Contact to", "Contact"],
    6 : ["demograp", "Demograp", "race", "gender", " man ", "woman", " men ", "women", " Men ", "Women", " Man ", "Woman", "Gender", "ethnic", "Ethnic", "Culture", "culture", "Demo"],
    7 : ["fruit", "Fruit", "nutri", "meat", "Meat", "veggie", "Veggie", "vegetable", "Vegetable", "diet", "Diet", " eat ", "Eat", "food", "Food", "intake", "Intake", "ingest", "Ingest", "Diet"],
    8 : ["qweqwEarlyLife"],
    9 : ["exerci", "Exerci", "excersize", "lose weight", "in shape", "losing weight", "working out", "active", "cardio", "work out", "physical activity", "gym", "fit", "Exercise"],
    10 : ["exposure to the", "exposure to sur", "Exposure to the", "Exposure"],
    11 : ["family", "history", "ancestor", "ancestory", "Family", "Family"],
    12 : ["fluid", "droplet", "Fluid", "saliva", "Fluids"],
    13 : ["genetic", "genes", "Genetic", "Genes", " gene ", "DNA", "inherit", "Gene"],
    14 : ["germs", "Germs", "bacteria", "Germs"],
    15 : ["hand", "Hand", "Hand"],
    16 : ["healthy life", "overall hea", "Overall h", "Health"],
    17 : ["healthcare", "health care", "check-up", "treatment", "therapy", "testing", "medical facilit", "hospital", "Hospital", "physician", "doctor", "Physician", "Doctor", "check up", "Healthcare", "Healthcare"],
    18 : ["immune", "Immune", "imune", "Imune", "Immune"],
    19 : ["insect", "mosquito", "bug", "Mosquito", "Insect", "Insect"],
    20 : ["random", "luck", "Random", "Luck", "Luck"],
    21 : ["prexisting", "Prexisting", "previous cond", "cholest", "Cholest", "Cholesterol", "diabete", "heart", "pre-existing", "Pre-existing", "pre existing", "Pre existing", "preexisting", "Preexisting", "Prexisting"],
    22 : ["be careful", "taking care", "being careful", "Prevent"],
    23 : [" ppe ", "PPE", "Ppe", "protective equi", "Protective", "protective c", "clothes", "mask", "PPE", "spray", "Protect"],
    24 : ["asdasd"],
    25 : ["sleep", "Sleep", " rest ", "resting", "Rest", "Sleep"],
    26 : ["smok", "Smok", "Cigar", "cigar", "vaping", "Smoking"],
    27 : ["quarant", "distancing", "Quarant", "Quarantine", "near sick", "around sick", "near infected", "around some", "around other", "around infected", "from people", "with people", "by people", "from people", "to people", "from sick people", "from infected people", "isolat", "quarantine", "social", "Social", "SocDist"],
    28 : ["stress", "Stress", "relax", "Relax", "stay positive", "staying positive", "tension", "Tension", "anxiety", "Anxiety", "nervous", "nervous", "Stress"],
    29 : ["travel", "Travel", "Travel"],
    30 : ["bath", "Bath", "shower", "Shower", "sanit", "hygie", "Hygie", "Unclean"],
    31 : ["weight", "obese", "obesity", "Weight", "Weight"],
    32 : ["don't know", "Don't know", "dont know", "Dont know", "Do not know", "do not know", "no idea", "no clue", "IDK"],
    33 : ["unsure", "don't know", "Don't know", "dont know", "Dont know", "Do not know", "do not know", "no idea", "no clue", "Unsure", "not sure", "Not sure", "not certain", "Not certain", "not familiar", "Not familiar", "1"],
    34 : ["research", "Research", "counsel", "Counsel", "educat", "Educat", "aware", "precaution", "Aware", "indentify", "Identify", "learn", "Learn", "teach", "Teach", "inform", "Inform", "knowled", "Knowled", "Aware/Education", "Other"],
    35 : ["blood flow", "blood pressure", "arteries", "BFlow", "Other"],
    36 : ["cholest", "Cholest", "Cholesterol", "Other"],
    37 : ["healthcare", "health care", "check-up", "treatment", "therapy", "testing", "medical facilit", "hospital", "Hospital", "physician", "doctor", "Physician", "Doctor", "check up", "Healthcare", "Healthcare", "Other"],
    38 : ["weather", "climate", "Climate", "temperature", "Climate", "Other"],
    39 : ["poverty", "Poverty", "Other"],
    40 : ["vaccine", "vitamin", "Vitamin", "medication", "meds", "Vaccine/Med", "Other"]
  };
  
  var map = {};
  var max = 0;
 
  var range1 = activeSheet.getRange(2, 4, 200);
  var range2 = activeSheet.getRange(2, 6, 200);
  range1.clear();
  range2.clear();
  
  for (var i = 1; i < 201; i++){
    var someCell = activeSheet.getRange(i+1, 3).getValue();
    var codeCell = activeSheet.getRange(i+1, 4).getValue();
    var otherCell = activeSheet.getRange(i+1, 6).getValue();
    
    for (var j = 1; j <= Object.keys(dict).length; j++){
      for (var k = 0; k < dict[j].length - 1; k++){
        someCell = activeSheet.getRange(i+1, 3).getValue();
        codeCell = activeSheet.getRange(i+1, 4).getValue();
        otherCell = activeSheet.getRange(i+1, 6).getValue();
        
        if (someCell.indexOf(dict[j][k])>-1){
          if (dict[j][dict[j].length - 1] == "1"){
            activeSheet.getRange(i + 1, 5).setValue(dict[j][dict[j].length - 1]);
          } else {

            if (dict[j][dict[j].length - 1] == "Other"){
              max = someCell.indexOf(dict[j][k]) + 4000;
              if (otherCell.length == 0){ 
                // activeSheet.getRange(i + 1, 6).setValue(dict[j][dict[j].length - 2]);
                map[someCell.indexOf(dict[j][k]) + 4000] = dict[j][dict[j].length - 2];
              } else {
                // activeSheet.getRange(i + 1, 6).setValue(otherCell + ", " + dict[j][dict[j].length - 2]);
                map[someCell.indexOf(dict[j][k]) + 4000] = dict[j][dict[j].length - 2];
              }
            } else {
              if (codeCell.length == 0) {
                // activeSheet.getRange(i + 1, 4).setValue(dict[j][dict[j].length - 1]);
                map[someCell.indexOf(dict[j][k])] = dict[j][dict[j].length - 1];
              } else if (otherCell.length == 0) {
                // activeSheet.getRange(i + 1, 4).setValue(codeCell + ", " + dict[j][dict[j].length - 1]);
                  map[someCell.indexOf(dict[j][k])] = dict[j][dict[j].length - 1];
              }
            }
            
          }
          k = dict[j].length - 1;
        }
        
      }
    }
    
    for (var f in map) {
      codeCell = activeSheet.getRange(i+1, 4).getValue();
      otherCell = activeSheet.getRange(i+1, 6).getValue();
      if (f >= 4000){
        if (otherCell.length == 0){ 
          activeSheet.getRange(i + 1, 6).setValue(map[f]);
        } else {
          activeSheet.getRange(i + 1, 6).setValue(otherCell + "," + map[f]);
        }
      } else {
        if (codeCell.length == 0) {
          activeSheet.getRange(i + 1, 4).setValue(map[f]);
        } else if (otherCell.length == 0) {
          activeSheet.getRange(i + 1, 4).setValue(codeCell + "," + map[f]);
        }
      }
      delete map[f];
    }
  }
  for (var i = 1; i < 201; i++){
    var otherCell = activeSheet.getRange(i+1, 6).getValue();
    var codeCell = activeSheet.getRange(i+1, 4).getValue();
    if (otherCell.length != 0) {
      if (codeCell.length == 0) {
        activeSheet.getRange(i + 1, 4).setValue("Other");
      } else {
        activeSheet.getRange(i + 1, 4).setValue(codeCell + "," + "Other");
      }
    }
  }
}