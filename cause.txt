function myCoder() {
  
  var app = SpreadsheetApp;
  var ss = app.getActiveSpreadsheet();
  var activeSheet = ss.getActiveSheet();

  var dict = {
    1 : ["young", "Young", "Old", " old ", " age ", "Age"],
    2 : [" air ", "breathe", "Air", "airborne", "Air"],
    3 : ["allerg", "alerg", "Alerg", "Allerg", "Allergy"],
    4 : ["animal", " bat ", "Animal", "Animal"],
    5 : ["bacteria", "Bacteria", "Bacteria"],
    6 : ["blood flow", "blood pressure", "arteries", "BFlow"],
    7 : ["china", "chines", "Chines", "China", "China"],
    8 : ["cholest", "Cholest", "Cholesterol"],
    9 : ["born with", "congeni", "Congeni", "Congenital"],
    10 : ["contact with", "Contact with", "contact through", "Contact through", "contact to", "Contact to", "Contact"],
    11 : ["fruit", "Fruit", "nutri", "meat", "Meat", "veggie", "Veggie", "vegetable", "Vegetable", "diet", "Diet", " eat ", "Eat", "food", "Food", "intake", "Intake", "ingest", "Ingest", "Diet"],
    12 : ["alcohol", "Alcohol", "drink", "Drink", "Water", "water", "Drinking"],
    13 : ["region", "travel", "environment", "Environment", "Environment", "Region", "area", "country", "place", "Country", "africa", "Africa", "Environment"],
    14 : ["exerci", "Exerci", "excersize", "lose weight", "in shape", "losing weight", "working out", "active", "cardio", "work out", "physical activity", "gym", "fit", "Exercise"],
    15 : ["childhood", "early on", "introduc", "early in life", "EarlyLife"],
    16 : ["family", "history", "ancestor", "parent", "ancestory", "Family", "Family"],
    17 : ["genetic", "genes", "Genetic", "Genes", " gene ", "DNA", "inherit", "Gene"],
    18 : ["germ", "Germ", "Germs"],
    19 : ["healthy life", "overall hea", "Overall h", "Health"],
    20 : ["heart", "Heart", "Cardiovas", "cardiovas", "Heart"],
    21 : ["immune", "Immune", "imune", "Imune", "Immune"],
    22 : ["asasdainfection"],
    23 : ["insect", "mosquito", "bug", "Mosquito", "Insect", "Insect"],
    24 : ["random", "luck", "Random", "Luck", "Luck"],
    25 : ["neuro", "Neruo", "Brain" , "brain", "tension", "Neuro"],
    26 : ["smok", "Smok", "Cigar", "cigar", "vaping", "Smoking"],
    27 : ["plant", "Plant", "pollen", "Pollen", "flower", "Tree", "trees", "Flower", "Plants"],
    28 : ["sex", "Sex", "Sex"],
    29 : ["stress", "Stress", "relax", "Relax", "stay positive", "staying positive", "anxiety", "Anxiety", "Stress"],
    30 : ["contaminated", "surface", "Surface", "Surface"],
    31 : ["bath", "Bath", "shower", "Shower", "disinfect", "sanit", "hygie", "Hygie", "Unclean"],
    32 : ["vaccine", "medication", "meds", "Vaccine", "Vaccines"],
    33 : ["varied", "random", "luck", "likely", "liklihood", "equal chance", "different factors", "Varied"],
    34 : ["virus", "viral", "Virus", "Virus"],
    35 : ["weather", "climate", "Weather", "Climate", "cold area", "hot area", "warmer area", "colder area", "warm area", "Climate", "Weather"],
    36 : ["don't know", "Don't know", "dont know", "Dont know", "Do not know", "do not know", "no idea", "no clue", "IDK"],
    37 : ["unsure", "Unsure", "not sure", "Not sure", "not certain", "Not certain", "not familiar", "Not familiar", "1"],
    38 : ["healthcare", "health care", "check-up", "treatment", "therapy", "testing", "medical facilit", "hospital", "Hospital", "physician", "doctor", "Physician", "Doctor", "check up", "Healthcare", "Healthcare", "Other"],
    39 : ["poverty", "Poverty", "Other"],
    40 : ["vitamin", "Vitamin", "Vitamins", "Other"],
  };
  
  var map = {};
  var max = 0;
 
  var range1 = activeSheet.getRange(2, 4, 200);
  var range2 = activeSheet.getRange(2, 6, 200);
  range1.clear();
  range2.clear();
  
  for (var i = 1; i < 201; i++){
    var someCell = activeSheet.getRange(i+1, 3).getValue();
    var codeCell = activeSheet.getRange(i+1, 4).getValue();
    var otherCell = activeSheet.getRange(i+1, 6).getValue();
    
    for (var j = 1; j <= Object.keys(dict).length; j++){
      for (var k = 0; k < dict[j].length - 1; k++){
        someCell = activeSheet.getRange(i+1, 3).getValue();
        codeCell = activeSheet.getRange(i+1, 4).getValue();
        otherCell = activeSheet.getRange(i+1, 6).getValue();
        
        if (someCell.indexOf(dict[j][k])>-1){
          if (dict[j][dict[j].length - 1] == "1"){
            activeSheet.getRange(i + 1, 5).setValue(dict[j][dict[j].length - 1]);
          } else {

            if (dict[j][dict[j].length - 1] == "Other"){
              max = someCell.indexOf(dict[j][k]) + 4000;
              if (otherCell.length == 0){ 
                // activeSheet.getRange(i + 1, 6).setValue(dict[j][dict[j].length - 2]);
                map[someCell.indexOf(dict[j][k]) + 4000] = dict[j][dict[j].length - 2];
              } else {
                // activeSheet.getRange(i + 1, 6).setValue(otherCell + ", " + dict[j][dict[j].length - 2]);
                map[someCell.indexOf(dict[j][k]) + 4000] = dict[j][dict[j].length - 2];
              }
            } else {
              if (codeCell.length == 0) {
                // activeSheet.getRange(i + 1, 4).setValue(dict[j][dict[j].length - 1]);
                map[someCell.indexOf(dict[j][k])] = dict[j][dict[j].length - 1];
              } else if (otherCell.length == 0) {
                // activeSheet.getRange(i + 1, 4).setValue(codeCell + ", " + dict[j][dict[j].length - 1]);
                  map[someCell.indexOf(dict[j][k])] = dict[j][dict[j].length - 1];
              }
            }
            
          }
          k = dict[j].length - 1;
        }
        
      }
    }
    
    for (var f in map) {
      codeCell = activeSheet.getRange(i+1, 4).getValue();
      otherCell = activeSheet.getRange(i+1, 6).getValue();
      if (f >= 4000){
        if (otherCell.length == 0){ 
          activeSheet.getRange(i + 1, 6).setValue(map[f]);
        } else {
          activeSheet.getRange(i + 1, 6).setValue(otherCell + "," + map[f]);
        }
      } else {
        if (codeCell.length == 0) {
          activeSheet.getRange(i + 1, 4).setValue(map[f]);
        } else if (otherCell.length == 0) {
          activeSheet.getRange(i + 1, 4).setValue(codeCell + "," + map[f]);
        }
      }
      delete map[f];
    }
  }
  for (var i = 1; i < 201; i++){
    var otherCell = activeSheet.getRange(i+1, 6).getValue();
    var codeCell = activeSheet.getRange(i+1, 4).getValue();
    if (otherCell.length != 0) {
      if (codeCell.length == 0) {
        activeSheet.getRange(i + 1, 4).setValue("Other");
      } else {
        activeSheet.getRange(i + 1, 4).setValue(codeCell + "," + "Other");
      }
    }
  }
}